{"version":3,"sources":["DomiColor/js/utils.js","DomiColor/js/main.js"],"names":["getRatio","img","naturalHeight","naturalWidth","toFixed","DomiColor","parentGrid","document","querySelector","container","imageCanvas","imageInput","$image__border","$palette","containerDimensions","offsetWidth","offsetHeight","events","read","e","target","files","bind","stopPropagation","preventDefault","classList","add","remove","dropImage","showImage","style","gridTemplateColumns","width","height","Utils","file","dataTransfer","type","reader","FileReader","onload","src","data","result","Vibrant","from","useQuantizer","Quantizer","WebWorker","getPalette","then","processPalette","readAsDataURL","palette","colors","Object","values","filter","c","fragment","createDocumentFragment","forEach","colorElement","createElement","background","color","getHex","getBodyTextColor","innerText","appendChild","innerHTML","element","addEventListener","event","handler","domicolor","run"],"mappings":"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","file":"main.0b183576.map","sourceRoot":"..","sourcesContent":["function getRatio(img, swap = false) {\n    let division = swap ? img.naturalHeight / img.naturalWidth : img.naturalWidth / img.naturalHeight;\n    return +division.toFixed(2);\n}\n\nexport default {getRatio};\n","// Scss\nimport '../scss/main.scss';\nimport '../assets/curves.svg';\n// Scripts\nimport Utils from './utils';\n\nclass DomiColor {\n    constructor() {\n        this.parentGrid = document.querySelector('.container');\n        this.container = document.querySelector('.image');\n        this.imageCanvas = document.querySelector('.image__canvas');\n        this.imageInput = document.querySelector('.image__input');\n        this.$image__border = document.querySelector('.image__border');\n        this.$palette = document.querySelector('.palette');\n        this.containerDimensions = [this.container.offsetWidth, this.container.offsetHeight];\n        this.events = [{\n                'handler': e => this.read(e.target.files[0]).bind(this),\n                'element': this.imageInput,\n                'event': 'input'\n            },\n            {\n                'handler': event => {\n                    event.stopPropagation();\n                    event.preventDefault();\n                    this.$image__border.classList.add('active');\n                },\n                'element': document.querySelector('.image__label'),\n                'event': 'dragenter'\n            },\n            {\n                'handler': event => {\n                    this.$image__border.classList.remove('active');\n                    event.stopPropagation();\n                    event.preventDefault();\n                },\n                'element': document.querySelector('.image__label'),\n                'event': 'dragleave'\n            },\n            {\n                'handler': e => {e.stopPropagation(); e.preventDefault();},\n                'element': document.querySelector('.image__label'),\n                'event': 'dragover'\n            },\n            {\n                'handler': this.dropImage.bind(this),\n                'element': document.querySelector('.image__label'),\n                'event': 'drop'\n            },\n            {\n                'handler': this.showImage.bind(this),\n                'element': this.imageCanvas,\n                'event': 'load'\n            }\n        ];\n    }\n\n    showImage() {\n        this.parentGrid.style.gridTemplateColumns = \"auto 1fr\";\n        this.imageCanvas.classList.add('active');\n        let [width, height] = this.containerDimensions;\n\n        if(Utils.getRatio(this.imageCanvas) < 1) {\n            this.container.style.height = `${Utils.getRatio(this.imageCanvas, true) * width}px`;\n            this.parentGrid.style.gridTemplateColumns = \"35% 1fr\";\n            this.container.style.width = \"100%\";\n        } else {\n            this.container.style.width = `${Utils.getRatio(this.imageCanvas) * height}px`;\n            this.container.style.height = \"60%\";\n        }\n    }\n\n    dropImage(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        // Validate it is a image\n        const file = e.dataTransfer.files[0];\n        if(file.type !== \"image/jpeg\" && file.type !== \"image/png\") {\n            alert('File type not supported.');\n            return false;\n        }\n        this.$image__border.classList.remove('active');\n        this.read(file);\n    }\n\n    read(file) {\n        const reader = new FileReader();\n        reader.onload = data => {\n            const src = data.target.result;\n            this.imageCanvas.src = src;\n            let v = Vibrant.from(src).useQuantizer(Vibrant.Quantizer.WebWorker);\n            v.getPalette().then(this.processPalette.bind(this));\n        };\n        reader.readAsDataURL(file);\n    }\n\n    processPalette(palette) {\n        let colors = Object.values(palette).filter(c => c!=null);\n        let fragment = document.createDocumentFragment();\n        colors.forEach(color => {\n            let colorElement = document.createElement('div');\n            colorElement.classList.add('color');\n            colorElement.style.background = color.getHex();\n            colorElement.style.color = color.getBodyTextColor();\n            colorElement.innerText = color.getHex();\n            fragment.appendChild(colorElement);\n        });\n        this.$palette.innerHTML = '';\n        this.$palette.appendChild(fragment);\n    }\n\n    run() {\n        this.events.forEach(event => {\n            event.element.addEventListener(event.event, event.handler);\n        })\n    }\n}\nconst domicolor = new DomiColor();\ndomicolor.run();\n"]}